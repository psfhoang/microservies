docker run --name mysql_1 -v pwd:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 mysql:5.7
http://192.168.1.49:8000/auth-server/oauth/authorize?response_type=code&client_id=hoang&scope=read&state=2K4ZDYkjCYQf6u5NPJYGDtOtxmUkgI73WIcI-PJFe8k%3D&redirect_uri=http://localhost:3000/sso
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
git config --global credential.helper store
INSERT INTO auth_server.oauth_client_details (client_id, access_token_validity, additional_information, authorities, authorized_grant_types, autoapprove, client_secret, refresh_token_validity, resource_ids, scope, web_server_redirect_uri) VALUES ('hoang', null, null, null, 'password,authorization_code,refresh_token,client_credentials', '1', '1', null, 'hoang,auth-server,order-server,chat-server', 'read,write,server', 'http://localhost:8080/oauth2/callback/hoang');
INSERT INTO auth_server.oauth_client_details (client_id, access_token_validity, additional_information, authorities, authorized_grant_types, autoapprove, client_secret, refresh_token_validity, resource_ids, scope, web_server_redirect_uri) VALUES ('hoang1', null, null, null, 'password,authorization_code,refresh_token', '1', '1', null, 'hoang,auth-server', 'read,write', 'http://localhost:8080/oauth2/callback/hoang');

http://localhost:8000/auth-server/oauth/authorize?response_type=code&client_id=hoang&scope=read&state=2K4ZDYkjCYQf6u5NPJYGDtOtxmUkgI73WIcI-PJFe8k%3D&redirect_uri=http://localhost:3000/sso

docker run --publish=7474:7474 --publish=7687:7687 -e 'NEO4J_AUTH=neo4j/secret' neo4j:4.3.6
docker run -p7474:7474 -p7687:7687 -e NEO4J_AUTH=neo4j/s3cr3t neo4j
https://medium.com/neo4j/graph-data-modeling-all-about-relationships-5060e46820ce
http://192.168.238.1:8000/chat-server/oauth2/authorize/hoang?redirect_uri=http://localhost:3000/oauth2/redirect
http://localhost:8000/chat-server/oauth2/authorize/hoang?redirect_uri=http://localhost:3000/oauth2/redirect
http://localhost:8000/chat-server/oauth2/authorize/hoang?redirect_uri=http://localhost:3000/oauth2/redirect
http://localhost:8082/auth-server/oauth/authorize?response_type=code&client_id=hoang&scope=read&state=2K4ZDYkjCYQf6u5NPJYGDtOtxmUkgI73WIcI-PJFe8k%3D&redirect_uri=http://localhost:3000/sso
http://192.168.1.49:8000/chat-server/oauth2/authorize/hoang?redirect_uri=http://localhost:3000/oauth2/redirect
http://192.168.1.244:8000/auth-server/logout?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2hhdC1zZXJ2ZXIiLCJhdXRoLXNlcnZlciIsIm9yZGVyLXNlcnZlciIsImhvYW5nIl0sInJvbGUiOiJVU0VSIiwidXNlcl9uYW1lIjoiaG9hbmdwdiIsInNjb3BlIjpbInNlcnZlciIsInJlYWQiLCJ3cml0ZSJdLCJmdWxsTmFtZSI6IlBoP20gVmk_dCBIb8OgbmciLCJleHAiOjE2NTAyMTQ4MDAsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiJdLCJqdGkiOiJiNzUxMzg3Yy1iYzVkLTQzZGItYWNiZi05M2ZlOGJjMGZlNmEiLCJlbWFpbCI6InBoYW12aWV0aG9hbmcxNDE4QGdtYWlsLmNvbSIsImNsaWVudF9pZCI6ImhvYW5nIiwidXNlcm5hbWUiOiJob2FuZ3B2In0.fl8aLarDdJB88jfYenlD0i4VMUQIr6-M_IrnGbsDEZ_sf0jj0Cmpw7F7Mls-UGv-fDSYdNcqH9crwp-AJOqVSO7FoGP4gUmwC2voVhiEmjFG5aeiBkfI8ka__oq6ViXxAHbLcaUZ_sJyXlJsmqvkGvxnYlHLJ0LGmo1jyEeOb5-XwW9RuXSdMAvVH6LNQUL8BFT472UQKz0YWPq39kyMJSLQYH80hKbrbqTOx0xFvgDFVvAwIJr6SJtSqomLj7mitYPeAuzhpd26v7qdfx3cMu4EmJj4li5WFw33Anok4IsiVhDlqxOXYgjIcn8rxW3idq-Z3vmO_bLHS_lZWG1NLw
sudo kill -9 $(sudo lsof -t -i:3000)
docker start $(docker ps -a -q -f status=exited)
docker run -d -p 27017:27017 --name mongo -e MONGODB_INITDB_ROOT_USERNAME=root -e MONGODB_INITDB_ROOT_PASSWORD=123456 -e MONGO_INITDB_DATABASE=patient mongo:latest
docker run -p 6379:6379 -d redis

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

dockerHub: hoangpv99/hoangdepzai99

https://github.com/joeltadeu/event-driven-axon-microservices

